---
layout: post
title: 算法005. 查找最小的k个元素
category: algorithm
tags: algorithm
---

###题目###
输入大小为n的数组，输出：  
1\. 最小的k个数  
2\. 第k小的数  
3\. 中位数

题目来源：[http://zhedahht.blog.163.com/blog/static/2541117420072432136859/](http://zhedahht.blog.163.com/blog/static/2541117420072432136859/)

###解题思路###
题目中的三个问题本质其实是同一个，本文讨论第一个。下面分析该问题的若干解法：  
1\. 类似[选择排序](http://en.wikipedia.org/wiki/Selection_sort)的思想，要求最小的k个整数，只要遍历数组k次，每次得到剩余数组的最小值。**时间复杂度为O(kn)**。  
2\. 先排序再从小到大选择k个整数。**时间复杂度为O(nlogn)**。  
3\. 遍历数组，用容量为k的最大堆存放最小的k个整数。如果最大堆未满，将当前整数插入最大堆。否则如果当前整数小于最大堆的堆顶值，就删除堆顶值并且插入当前整数。由于最大堆的插入删除操作耗时均为O(logn)(这里为**O(logk)**)，因此该算法的**时间复杂度为O(nlogk)**。该算法的另一优点是，当n特别巨大(不能全部载入内存)而k相对较小时，容量为k的最大堆能放在内存中，无须做其它额外处理。  
4\. [快速选择](http://en.wikipedia.org/wiki/Selection_algorithm)：利用快速排序的思想，选取合适的枢纽元(三数中值、随机)，每次将数组分为小于枢纽元(k1)和大于枢纽元(k2)两部分。如果k小于k1，则递归地在前半部分查找最小的k个数。否则在后半部分查找最小的k-k2个数。该算法的**平均时间复杂度为O(n)**。

###参考代码###
{% highlight cpp %}
test
{% endhighlight %}
